{"version":3,"file":"static/js/521.35c1046b.chunk.js","mappings":"mKAuFA,UApFkB,WAChB,IAAMA,GAAOC,EAAAA,EAAAA,MAAPD,GACN,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwBN,EAAAA,EAAAA,UAAS,IAAjC,eAAOO,EAAP,KAAaC,EAAb,KACMC,EAAO,IAAIC,KAEbC,GAAWC,EAAAA,EAAAA,OAEfC,EAAAA,EAAAA,YAAU,WACRC,YAAW,WACTC,MAAM,gCAAD,OAAiCjB,IACnCkB,MAAK,SAACC,GACL,OAAOA,EAAIC,MACZ,IACAF,MAAK,SAACf,GACLG,GAAa,GACbF,EAASD,GACTK,EAASL,EAAMI,OACfG,EAAQP,EAAMM,KACf,IACAY,OAAM,SAACC,GACNhB,GAAa,EACd,GACJ,GAAE,IACJ,GAAE,IA4BH,OACE,iBAAKiB,UAAU,SAAf,UACGlB,IAAa,wCACbF,IACC,4BACE,6DACA,kBAAMqB,SA5BO,SAACC,GACpBA,EAAEC,iBACFT,MAAM,gCAAD,OAAiCjB,GAAM,CAC1C2B,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBnB,KAAMoB,KAAKC,UAAU,CACnBvB,MAAAA,EACAE,KAAAA,EACAsB,OAAQ5B,EAAM4B,OACdC,UAAWrB,EAAKsB,eAAe,aAGhCf,MAAK,SAACC,GAAD,OAASe,QAAQC,IAAIhB,EAArB,IACLE,OAAM,SAACC,GAAD,OAASY,QAAQC,IAAIb,EAArB,IAETT,EAAS,WAAD,OAAYb,IACpBoC,MAAM,wEACNC,OAAOC,SAASC,QACjB,EAQO,WACE,6CACA,kBACEC,KAAK,OACLC,UAAQ,EACRC,MAAOnC,EACPoC,SAtCK,SAAClB,GAChBjB,EAASiB,EAAEmB,OAAOF,MACnB,EAqCWG,YAAY,wDAEd,6CACA,qBACEJ,UAAQ,EACRC,MAAOjC,EACPkC,SAAU,SAAClB,GAAD,OAAOf,EAAQe,EAAEmB,OAAOF,MAAxB,EACVG,YAAY,wDAEd,qDAMX,C","sources":["boardComponent/EditBoard.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst EditBoard = () => {\n  let { id } = useParams();\n  const [board, setBoard] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const date = new Date();\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(`http://localhost:3001/boards/${id}`)\n        .then((res) => {\n          return res.json();\n        })\n        .then((board) => {\n          setIsPending(false);\n          setBoard(board);\n          setTitle(board.title);\n          setBody(board.body);\n        })\n        .catch((err) => {\n          setIsPending(false);\n        });\n    }, 1000);\n  }, []);\n\n  const onChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:3001/boards/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        title,\n        body,\n        author: board.author,\n        createdAt: date.toLocaleString('ko-kr'),\n      }),\n    })\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n\n    navigate(`/boards/${id}`);\n    alert('게시글이 수정되었습니다.');\n    window.location.reload();\n  };\n\n  return (\n    <div className='create'>\n      {isPending && <div>Loading...</div>}\n      {board && (\n        <div>\n          <h2>게시글 수정</h2>\n          <form onSubmit={handleSubmit}>\n            <label>제목</label>\n            <input\n              type='text'\n              required\n              value={title}\n              onChange={onChange}\n              placeholder='제목을 입력하세요.'\n            />\n            <label>내용</label>\n            <textarea\n              required\n              value={body}\n              onChange={(e) => setBody(e.target.value)}\n              placeholder='내용을 입력하세요.'\n            ></textarea>\n            <button>등록</button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditBoard;\n"],"names":["id","useParams","useState","board","setBoard","isPending","setIsPending","title","setTitle","body","setBody","date","Date","navigate","useNavigate","useEffect","setTimeout","fetch","then","res","json","catch","err","className","onSubmit","e","preventDefault","method","headers","JSON","stringify","author","createdAt","toLocaleString","console","log","alert","window","location","reload","type","required","value","onChange","target","placeholder"],"sourceRoot":""}